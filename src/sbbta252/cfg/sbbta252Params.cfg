#! /usr/bin/env python

PACKAGE='sbbta252'
import roslib
roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
#       Name            Type      Level Description                                     Default Min   Max
gen.add("roll_freq", 	int_t,    0,    "Frequency to update roll",			1,      0,    255)
gen.add("pitch_freq", int_t,    0,    "Frequency to update pitch",		        1,      0,    255)
gen.add("yaw_freq",   int_t,    0,    "Frequency to update yaw",        		1,      0,    255)
gen.add("depth_freq",	int_t,    0,    "Frequency to update depth",        		1,      0,    255)
gen.add("surge_freq",	int_t,    0,    "Frequency to update surge",       		1,      0,    255)
gen.add("port",         str_t,    0,    "The port the thruster is plugged into.",       "/dev/ttyS0")
gen.add("baud",         int_t,    0,    "The baud rate of the thruster.",               115200, 2400, 115200)
gen.add("t_left_yaw",   int_t,    0,    "The address of the left yaw thruster.",        3,      0,    255)
gen.add("t_right_yaw",  int_t,    0,    "The address of the right yaw thruster.",       2,      0,    255)
gen.add("t_left_roll",  int_t,    0,    "The address of the left roll thruster.",       4,      0,    255)
gen.add("t_right_roll", int_t,    0,    "The address of the right roll thruster.",      1,      0,    255)
gen.add("t_pitch",      int_t,    0,    "The address of the pitch thruster.",           5,      0,    255)
gen.add("init_time",    int_t,    0,    "The amount of time to connect to thruster.",   1,      1,    10)
gen.add("manual",       bool_t,   0,    "Should we manually control the thrusters.",    False)
gen.add("thrust_addr",  int_t,    0,    "Thruster address we are talking to.",          1,      0,    255)
gen.add("reconnect",    bool_t,   0,    "Whether to attempt to reconnect to thruster.", False)
gen.add("change_addr",  bool_t,   0,    "Flag to change the address.",                  False)
gen.add("new_addr",     int_t,    0,    "New address to change to.",                    1,      1,    5)
gen.add("speed_perc",   int_t,    0,    "The speed of the thruster in percent.",        0,      -100, 100)
gen.add("get_status",   bool_t,   0,    "Get the status of this thruster.",             False)


exit(gen.generate(PACKAGE, "sbbta252", "sbbta252Params"))
